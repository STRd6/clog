// Generated by CoffeeScript 1.6.3
(function() {
  var SCORE_MAP, churn, execSync, fs, read, report, score, tokens,
    __slice = [].slice;

  execSync = require("execSync");

  tokens = require("coffee-script").tokens;

  fs = require("fs");

  SCORE_MAP = {
    "+": 1,
    "=": 1,
    "BOOL": 1,
    "IDENTIFIER": 1,
    "->": 3,
    "=>": 6,
    "IF": 4,
    "ELSE": 2,
    "NUMBER": 1,
    "(": 1,
    ",": 1,
    "-": 1,
    ".": 2,
    ":": 1,
    "?": 3,
    "?.": 5,
    "@": 5,
    "CALL_START": 2,
    "CLASS": 30,
    "COMPARE": 1,
    "EXTENDS": 15,
    "FOR": 10,
    "FORIN": 10,
    "FOROF": 10,
    "INDENT": 1,
    "INDEX_START": 2,
    "LEADING_WHEN": 1,
    "LOGIC": 1,
    "MATH": 1,
    "NULL": 3,
    "PARAM_START": 3,
    "REGEX": 10,
    "RETURN": 0,
    "STRING": 1,
    "SUPER": 7,
    "SWITCH": 7,
    "TERMINATOR": 1,
    "UNARY": 2,
    "[": 2,
    "{": 2
  };

  read = function(path) {
    return fs.readFileSync(path, "utf8");
  };

  churn = function(filePath, cb) {
    var output;
    output = execSync.exec("git whatchanged " + filePath + " | grep 'commit' | wc -l");
    return parseInt(output.stdout, 10);
  };

  score = function(filePath) {
    var file;
    file = read(filePath);
    return tokens(file).reduce(function(sum, token) {
      var type;
      type = token[0];
      return sum + (SCORE_MAP[type] || 0);
    }, 0);
  };

  report = function() {
    var filePaths;
    filePaths = 1 <= arguments.length ? __slice.call(arguments, 0) : [];
    return filePaths.reduce(function(hash, file) {
      hash[file] = score(file);
      return hash;
    }, {});
  };

  exports.clog = {
    churn: churn,
    score: score,
    report: report
  };

}).call(this);
