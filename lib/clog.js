// Generated by CoffeeScript 1.6.3
(function() {
  var SCORE_MAP, churn, exec, fs, nodes, readFile, score, tokens, _ref;

  exec = require('child_process').exec;

  _ref = require('coffee-script'), nodes = _ref.nodes, tokens = _ref.tokens;

  fs = require('fs');

  SCORE_MAP = {
    "+": 1,
    "=": 1,
    "BOOL": 1,
    "IDENTIFIER": 1,
    "->": 3,
    "=>": 6,
    "IF": 4,
    "ELSE": 2,
    "NUMBER": 1,
    "(": 1,
    ",": 1,
    "-": 1,
    ".": 2,
    ":": 1,
    "?": 3,
    "?.": 5,
    "@": 5,
    "CALL_START": 2,
    "CLASS": 30,
    "COMPARE": 1,
    "EXTENDS": 15,
    "FOR": 10,
    "FORIN": 10,
    "FOROF": 10,
    "INDENT": 1,
    "INDEX_START": 2,
    "LEADING_WHEN": 1,
    "LOGIC": 1,
    "MATH": 1,
    "NULL": 3,
    "PARAM_START": 3,
    "REGEX": 10,
    "RETURN": 0,
    "STRING": 1,
    "SUPER": 7,
    "SWITCH": 7,
    "TERMINATOR": 1,
    "UNARY": 2,
    "[": 2,
    "{": 2
  };

  readFile = function(path) {
    return fs.readFileSync(path, 'utf8');
  };

  score = function(filePath) {
    var file;
    file = readFile(filePath);
    return tokens(file).reduce(function(sum, token) {
      var type;
      type = token[0];
      return sum + (SCORE_MAP[type] || 0);
    }, 0);
  };

  /*
  metric: churn
  
  Indicates how many times a
  file has been changed. The more
  it has been changed, the better a
  candidate it is for refactoring since
  it probably does too many things
  */


  churn = function(filePath, cb) {
    return exec("git whatchanged " + filePath + " | grep 'commit' | wc -l", cb);
  };

  exports.clog = {
    churn: churn,
    score: score
  };

}).call(this);
